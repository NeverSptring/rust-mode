#!/usr/bin/python

testEnv = Environment(CXXFLAGS=["-std=c++11", "-O2", "-Wall", "-Wextra"], CPPPATH=["#src"], LIBS=["rust-mode", "boost_unit_test_framework"], LIBPATH=["#"])
#testEnv = Environment(CXXFLAGS=["-std=c++11", "-O2", "-Wall", "-Wextra"], CXX="clang++", CPPPATH=["#src"], LIBS=["rust-mode", "boost_unit_test_framework"], LIBPATH=["#"])
#testEnv = Environment(CXXFLAGS=["-std=c++11", "-ggdb", "-Wall", "-Wextra"], CPPPATH=["#src"], LIBS=["rust-mode", "boost_unit_test_framework"], LIBPATH=["#"])

CXX = ARGUMENTS.get("CXX", "g++")
testEnv["CXX"] = CXX

testmode = ARGUMENTS.get("testmode", "release")

if testmode == "release":
    testEnv["CXXFLAGS"].extend(["-O2"])
elif testmode == "debug":
    testEnv["CXXFLAGS"].extend(["-g"])
elif testmode == "profile":
    testEnv["CXXFLAGS"].extend(["-pg"])
    testEnv["LINKFLAGS"] = ["-pg"]
elif testmode == "coverall":
    testEnv["CXXFLAGS"].extend(["-fprofile-arcs", "-ftest-coverage"])
    testEnv["LIBS"].extend(["gcov"])
else:
    print("Error: unknown testmode value")

testEnv.PrependENVPath("LD_LIBRARY_PATH", testEnv.Dir('#').abspath)
for source in testEnv.Glob("*.cpp"):
    program = testEnv.Program(source)
    test_alias = testEnv.Alias('test', [program], program[0].path)

AlwaysBuild(test_alias)
