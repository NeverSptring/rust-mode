#!/usr/bin/python

testEnv = Environment(CXXFLAGS=["-std=c++11", "-O2", "-Wall", "-Wextra", "-fdiagnostics-color=always"], CPPPATH=["#src"], LIBS=["rust-mode", "boost_unit_test_framework"], LIBPATH=["#"])
#testEnv = Environment(CXXFLAGS=["-std=c++11", "-O2", "-Wall", "-Wextra", "-fdiagnostics-color=always"], CXX="clang++", CPPPATH=["#src"], LIBS=["rust-mode", "boost_unit_test_framework"], LIBPATH=["#"])
#testEnv = Environment(CXXFLAGS=["-std=c++11", "-ggdb", "-Wall", "-Wextra", "-fdiagnostics-color=always"], CPPPATH=["#src"], LIBS=["rust-mode", "boost_unit_test_framework"], LIBPATH=["#"])

testEnv.PrependENVPath("LD_LIBRARY_PATH", testEnv.Dir('#').abspath)
for source in testEnv.Glob("*.cpp"):
    program = testEnv.Program(source)
    test_alias = testEnv.Alias('test', [program], program[0].path)

AlwaysBuild(test_alias)
